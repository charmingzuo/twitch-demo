let request = require('request');
const messages = require('../common/messages');
const twitchOauth = require('./twitch-config').twitchOauth;
const httpProxy = require('../tsw/tsw-config').httpProxy;

if (httpProxy) {
    request = request.defaults({'proxy': httpProxy});
}

//require('request').debug = true;

module.exports = {

    getAccessData: (code, cb)=> {
        "use strict";

        let logger = plug('logger');

        let formData = {
            client_id: twitchOauth.CLIENT_ID,
            client_secret: twitchOauth.CLIENT_SECRET,
            grant_type: 'authorization_code',
            redirect_uri: twitchOauth.REDIRECT_URI,
            code: code,
            state: Math.random()
        };

        request.post('https://api.twitch.tv/kraken/oauth2/token', {
            proxy: 'http://dev-proxy.oa.com:8080',
            form: formData
        }, (err, res, body)=> {
            let json;
            if (!err && res.statusCode == 200) {
                try {
                    json = JSON.parse(body);
                } catch (e) {
                    logger.error('解析Twitch返回值失败，' + e.message);
                    err = messages.ERR_PARSE_JSON_FAILED;
                }
            }

            if (json) {
                logger.info('获取Twitch授权信息成功');
                cb(null, {
                    accessToken: json['access_token'],
                    refreshToken: json['refresh_token'],
                    scope: json['scope']
                });
            }
            else {
                logger.error('err=' + (err || '') + ', status=' + (res ? res.status : '') + ', body=' + JSON.stringify(body));
                cb(messages.ERR_TWITCH_OAUTH_FAILED, {});
            }

        });

    }

};